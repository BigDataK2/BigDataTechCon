compressoragent.sources = collector_source
# Empiracally speaking to get maximum through put parallelize at the channel level (space separated list of channels)
compressoragent.channels = channel_1
compressoragent.sinks = channel_1_sink_1 channel_1_sink_2
# Configure Source

compressoragent.sources.collector_source.type = avro
compressoragent.sources.collector_source.channels = channel_1
compressoragent.sources.collector_source.bind = localhost
compressoragent.sources.collector_source.port = 6169


# Configure multiplexing channel selector to split evenly across compression sinks
# Conversant made a simple selector to randomly distribute events across as many channels as are configured in the flume agent
# compressoragent.sources.collector_source.selector.type = org.apache.flume.channel.LoadBalancingChannelSelector
# compressoragent.sources.collector_source.selector.header = channel
# compressoragent.sources.collector_source.selector.mapping.1 = channel_1
# compressoragent.sources.collector_source.selector.mapping.2 = channel_2
# compressoragent.sources.collector_source.selector.mapping.3 = channel_3
# compressoragent.sources.collector_source.selector.mapping.4 = channel_4
# compressoragent.sources.collector_source.selector.mapping.5 = channel_5
# compressoragent.sources.collector_source.selector.mapping.6 = channel_6
# compressoragent.sources.collector_source.selector.mapping.7 = channel_7
# compressoragent.sources.collector_source.selector.mapping.8 = channel_8
# compressoragent.sources.collector_source.selector.mapping.9 = channel_9
# compressoragent.sources.collector_source.selector.default = channel_10

# Configure Channels - just one in this example,
/Users/mkeane/src/BigDataTechCon/flume/compressor
compressoragent.channels.channel_1.type = file
compressoragent.channels.channel_1.transactionCapacity = 1000
compressoragent.channels.channel_1.checkpointInterval = 30000
compressoragent.channels.channel_1.checkpointDir = /Users/mkeane/src/BigDataTechCon/flume/compressor/channel_1/checkpoint
compressoragent.channels.channel_1.dataDirs = /Users/mkeane/src/BigDataTechCon/flume/compressor/channel_1/data
compressoragent.channels.channel_1.capacity = 5000000

# Configure multiple sinks per channel for failover should down stream agent be down.
#compressoragent.sinks.channel_1_sink_1.hostname = localhost
#compressoragent.sinks.channel_1_sink_1.port = 6170
#compressoragent.sinks.channel_1_sink_1.batch-size = 100
#compressoragent.sinks.channel_1_sink_1.type = avro
compressoragent.sinks.channel_1_sink_1.type = null
compressoragent.sinks.channel_1_sink_1.channel = channel_1
#compressoragent.sinks.channel_1_sink_1.compression-type = deflate
#compressoragent.sinks.channel_1_sink_1.compression-level = 1
#compressoragent.sinks.channel_1_sink_1.request-timeout = 20000
#compressoragent.sinks.channel_1_sink_1.connect-timeout = 20000

#compressoragent.sinks.channel_1_sink_2.hostname = localhost
#compressoragent.sinks.channel_1_sink_2.port = 6171
#compressoragent.sinks.channel_1_sink_2.batch-size = 100
#compressoragent.sinks.channel_1_sink_2.type = avro
compressoragent.sinks.channel_1_sink_2.type = null
compressoragent.sinks.channel_1_sink_2.channel = channel_1
#compressoragent.sinks.channel_1_sink_2.compression-type = deflate
#compressoragent.sinks.channel_1_sink_2.compression-level = 1
#compressoragent.sinks.channel_1_sink_2.request-timeout = 20000
#compressoragent.sinks.channel_1_sink_2.connect-timeout = 20000

# Each channel needs a sink group for fail over purposes.
compressoragent.sinkgroups = channel_1_group

# Configure Sink Group (failover) for channel: channel_1
# In flume 1.4 it seemed round robin was measurably slower than failover (context switching?)
# A brief test in flume 1.6 round robin performed as well as failover.
compressoragent.sinkgroups.channel_1_group.sinks = channel_1_sink_1 channel_1_sink_2
compressoragent.sinkgroups.channel_1_group.processor.type = failover
compressoragent.sinkgroups.channel_1_group.processor.priority.channel_1_sink_1 = 201
compressoragent.sinkgroups.channel_1_group.processor.priority.channel_1_sink_2 = 101
compressoragent.sinkgroups.channel_1_group.processor.backoff = true
compressoragent.sinkgroups.channel_1_group.processor.maxpenalty = 30000
